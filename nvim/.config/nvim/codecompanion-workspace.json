{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "name": "Neovim Configuration",
  "version": "1.0.0",
  "system_prompt": "You are an expert Neovim configuration assistant. Help users manage their editor setup, troubleshoot plugin issues, and follow Lua best practices.",
  "vars": {},
  "groups": [
    {
      "name": "Core Configuration",
      "system_prompt": "Focus on core Neovim settings and package management",
      "data": ["init", "lazy-lock"],
      "opts": {
        "remove_config_system_prompt": false
      }
    },
    {
      "name": "Plugin Management",
      "system_prompt": "Handle plugin configurations, dependency management, and version conflicts",
      "data": [
        "bufferline", "codecompanion", "hop",
        "lualine", "neo-tree", "snacks",
        "toggleterm", "autopairs", "debug",
        "gitsigns", "indent_line", "lint"
      ]
    },
    {
      "name": "UI Enhancements",
      "system_prompt": "Manage interface elements and visual presentation",
      "data": ["bufferline", "lualine", "neo-tree"]
    },
    {
      "name": "Editor Features",
      "system_prompt": "Handle terminal integration, navigation, and AI helpers",
      "data": ["hop", "toggleterm", "codecompanion"]
    },
    {
      "name": "Code Quality",
      "system_prompt": "Linting, formatting, and code structure assistance",
      "data": ["autopairs", "indent_line", "lint"]
    }
  ],
  "data": {
    "init": {
      "type": "file",
      "path": "init.lua",
      "description": "Entry point for Neovim configuration"
    },
    "lazy-lock": {
      "type": "file",
      "path": "lazy-lock.json",
      "description": "Lockfile tracking plugin versions"
    },
    "bufferline": {
      "type": "file",
      "path": "lua/custom/plugins/bufferline.lua",
      "description": "Tab/buffer management configuration"
    },
    "codecompanion": {
      "type": "file",
      "path": "lua/custom/plugins/codecompanion.lua",
      "description": "AI assistant integration setup"
    },
    "hop": {
      "type": "file",
      "path": "lua/custom/plugins/hop.lua",
      "description": "Enhanced navigation configuration"
    },
    "lualine": {
      "type": "file",
      "path": "lua/custom/plugins/lualine.lua",
      "description": "Status line customization"
    },
    "neo-tree": {
      "type": "file",
      "path": "lua/custom/plugins/neo-tree.lua",
      "description": "File tree explorer setup"
    },
    "snacks": {
      "type": "file",
      "path": "lua/custom/plugins/snacks.lua",
      "description": "Quick-snack configuration (assumed quick-access)"
    },
    "toggleterm": {
      "type": "file",
      "path": "lua/custom/plugins/toggleterm.lua",
      "description": "Toggleable terminal configuration"
    },
    "autopairs": {
      "type": "file",
      "path": "lua/kickstart/plugins/autopairs.lua",
      "description": "Auto-pairing brackets/quote configuration"
    },
    "debug": {
      "type": "file",
      "path": "lua/kickstart/plugins/debug.lua",
      "description": "Debugging setup (likely nvim-dap)"
    },
    "gitsigns": {
      "type": "file",
      "path": "lua/kickstart/plugins/gitsigns.lua",
      "description": "Git integration in gutter"
    },
    "indent_line": {
      "type": "file",
      "path": "lua/kickstart/plugins/indent_line.lua",
      "description": "Indentation guide configuration"
    },
    "lint": {
      "type": "file",
      "path": "lua/kickstart/plugins/lint.lua",
      "description": "Linting setup (likely null-ls)"
    }
  }
}
